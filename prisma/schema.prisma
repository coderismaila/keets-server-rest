// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  username String @unique
  staffId  String @unique
  role     Role   @default(USER)
  password String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  profile Profile?


  @@index([email, username, staffId])
}

model Profile {
  id            String    @id @default(cuid())
  userId        String    @unique
  firstName     String
  lastName      String
  middleName    String?
  areaOfficeId  String
  gender        Gender
  birthDate     DateTime?
  phoneNumber   String
  addressLine1  String?
  addressLine2  String?
  city          String?
  state         String?
  stateOfOrigin String?
  country       String?   @default("nigeria")

  user             User         @relation(fields: [userId], references: [id])
  areaOffice       AreaOffice   @relation(name: "areaOffice", fields: [areaOfficeId], references: [id])
  technicalManager AreaOffice[] @relation("technicalManager")
  areaManager      AreaOffice[] @relation("areaManager")

  @@unique([phoneNumber])
  @@index([userId, phoneNumber])
}

model AreaOffice {
  id                 String  @id @default(cuid())
  name               String  @unique
  areaManagerId      String? @unique
  technicalManagerId String? @unique

  technicalManager Profile? @relation(name: "technicalManager", fields: [technicalManagerId], references: [id])
  areaManager      Profile? @relation(name: "areaManager", fields: [areaManagerId], references: [id])

  user    Profile[] @relation("areaOffice")
  station Station[] @relation("stationAreaOffice")
}

model Station {
  id           String      @id @default(cuid())
  name         String      @unique
  areaOfficeId String?     @unique
  stationType  StationType

  areaOffice AreaOffice? @relation(name: "stationAreaOffice", fields: [areaOfficeId], references: [id])

  powerTransformer PowerTransformer[] @relation("stationPowerTransformer")

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model PowerTransformer {
  id           String  @id @default(cuid())
  name         String  @unique
  stationId    String  @unique
  capacityKVA  Float   @default(0)
  feeder33kvId String? @unique

  feeder33kv Feeder?  @relation(name: "feeder33kv", fields: [feeder33kvId], references: [id])
  station    Station  @relation(name: "stationPowerTransformer", fields: [stationId], references: [id])
  feeder     Feeder[] @relation("feederPowerTransformer")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feeder {
  id                 String       @id @default(cuid())
  name               String       @unique
  voltageLevel       VoltageLevel
  routeLength        Float?       @default(0)
  kaedcoCode         String       @unique
  nercCode           String       @unique
  powerTransformerId String

  powerTransformer       PowerTransformer   @relation(name: "feederPowerTransformer", fields: [powerTransformerId], references: [id])
  powerTransformerSource PowerTransformer[] @relation("feeder33kv")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  MOD
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

enum StationType {
  TRANSMISSION
  DISTRIBUTION
}

enum VoltageLevel {
  KV33
  KV11
}
